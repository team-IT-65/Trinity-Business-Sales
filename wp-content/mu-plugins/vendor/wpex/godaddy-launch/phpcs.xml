<?xml version="1.0"?>
<ruleset name="GoDaddy_Launch">
	<description>Rules for GoDaddy_Launch</description>

	<arg name="extensions" value="php" />
	<arg name="basepath" value="./" />
	<file>./</file>

	<exclude-pattern>build/*</exclude-pattern>
	<exclude-pattern>vendor/*</exclude-pattern>
	<exclude-pattern>includes/Dependencies/*</exclude-pattern>
	<exclude-pattern>node_modules/*</exclude-pattern>

	<arg name="colors"/>
	<arg value="sp"/>

	<!-- (Subset of?) the rules from the Plugin Review Team -->
	<rule ref="WordPress.Security.ValidatedSanitizedInput.InputNotSanitized">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.Security.NonceVerification.Recommended" />
	<rule ref="WordPress.DateTime.RestrictedFunctions.date_date" />
	<rule ref="WordPress.Security.EscapeOutput.OutputNotEscaped">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.Security.NonceVerification.Missing" />
	<rule ref="WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents" />
	<rule ref="WordPress.WP.EnqueuedResources.NonEnqueuedScript" />

	<!-- Include the WordPress-Extra standard. -->
	<rule ref="WordPress-Extra">
		<!--
		We may want a middle ground though. The best way to do this is add the
		entire ruleset, then rule by rule, remove ones that don't suit a project.
		We can do this by running `phpcs` with the '-s' flag, which allows us to
		see the names of the sniffs reporting errors.
		Once we know the sniff names, we can opt to exclude sniffs which don't
		suit our project like so.
		-->
		<exclude name="WordPress.Files.FileName"/>
		<exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>
		<!-- <exclude name="WordPress.Files.FileName.InvalidClassFileName"/> -->
		<!-- <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/> -->
	</rule>

	<!-- Let's also check that everything is properly documented. -->
	<rule ref="WordPress-Docs"/>

	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.Commenting.Todo"/>

	<!-- Check for PHP cross-version compatibility. -->
	<config name="testVersion" value="8.0-"/>
	<rule ref="PHPCompatibilityWP"/>

	<!--
	To get the optimal benefits of using WPCS, we should add a couple of
	custom properties.
	Adjust the values of these properties to fit our needs.

	For information on additional custom properties available, check out
	the wiki:
	https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<config name="minimum_supported_wp_version" value="5.9"/>

	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="godaddy-launch"/>
		</properties>
	</rule>

	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array" value="gdl, GD_TEMP_DOMAIN, gdv, godaddy_launch, wpaas, GoDaddy\WordPress\Plugins\Launch"/>
		</properties>
	</rule>

</ruleset>
